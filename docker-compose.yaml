services:
  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_PASSWORD: mysecretpassword     
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres         
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  node_app:
    build:
      context: ./node_backend
    ports:
      - "3000:3000"   
    depends_on:
      - db
    environment:
      DATABASE_URL: postgresql://postgres:mysecretpassword@db:5432/postgres?schema=public
      SCRIPT_TO_RUN: app.js

  node_server:
    build:
      context: ./node_backend
    ports:
      - "3001:3001"   
    depends_on:
      - db
    environment:
      DATABASE_URL: postgresql://postgres:mysecretpassword@db:5432/postgres?schema=public
      SCRIPT_TO_RUN: server.js

  python_backend:
    build:
      context: ./backend/delivery
      dockerfile: Dockerfile 
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      DATABASE_URL: postgresql://postgres:mysecretpassword@db:5432/postgres?schema=public

  python_public_transport:
    build:
      context: ./backend/public_transport
      dockerfile: Dockerfile
    command: uvicorn app.main:app --host 0.0.0.0 --port 4000 --reload
    ports:
      - "4000:4000"
    depends_on:
      - db
    environment:
      DATABASE_URL: postgresql://postgres:mysecretpassword@db:5432/postgres?schema=public

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0"]
    ports:
      - "5173:5173"
    depends_on:
      - python_backend
      - python_public_transport
      - node_app
      - node_server

volumes:
  db_data:
